import { useState } from "react";
import { DateRange } from "react-date-range";
import AddVulnerabilityBar from "../components/AddVulnerabilityBar";
import DetailsForm from "../components/DetailsForm";
import VulnerabilityTable from "../components/VulnerabilityTable";


const Sidebar = () => {
  const [dateRetest, setDateRetest] = useState([
    {
      startDate: new Date(),
      endDate: null,
      key: 'retestDateRange'
    }
  ]);
  const [dateAudyt, setDateAudyt] = useState([
    {
      startDate: new Date(),
      endDate: null,
      key: 'audytDateRange'
    }
  ]);

  const [section1, setSection1] = useState({
    systemName: "",
    testLocalization: "",
    reportVersion: "",
    testsSpecification: "",
    testsConclusions: "",
    testsVulnerabilities: "",
    technicalSummary: "",
    recommendedChanges: "",
  });
  const [vulnerabilities, setVulnerabilities] = useState([]);

  const addVulnerability = (item) => {
    const tempState = [...vulnerabilities];
    tempState.push({ name: item.name, danger: item.danger, done: item.done });
    setVulnerabilities(tempState);
  };
  const addDetailsVuln = (key, item) => {
    const tempState = [...vulnerabilities];
    tempState[key] = {...tempState[key], details: item};
    setVulnerabilities(tempState);
  };

  return (
    <div className="text-center">
      <h4 className="text-uppercase fw-bold">Sekcje raportu</h4>
      <hr />
      <div className="accordion accordion-flush" id="accordionFlushExample">
        <div className="accordion-item">
          <h2 className="accordion-header" id="flush-headingOne">
            <button
              className="accordion-button collapsed"
              type="button"
              data-bs-toggle="collapse"
              data-bs-target="#flush-collapseOne"
              aria-expanded="false"
              aria-controls="flush-collapseOne"
            >
              1. Informacje ogólne
            </button>
          </h2>
          <div
            id="flush-collapseOne"
            className="accordion-collapse collapse"
            aria-labelledby="flush-headingOne"
            data-bs-parent="#accordionFlushExample"
          >
            <div className="accordion-body">
              <form className="row g-3 mt-3">
                <div className="row mb-3 my-2">
                  <label htmlFor="system" className="col-sm-4 col-form-label">
                    Testowany system
                  </label>
                  <div className="col-sm-8">
                    <input
                      type="text"
                      className="form-control"
                      id="system"
                      value={section1.systemName}
                      onChange={(e) =>
                        setSection1((prev) => ({
                          ...prev,
                          systemName: e.target.value,
                        }))
                      }
                    />
                  </div>
                </div>
                <div className="row mb-3 my-2">
                  <label htmlFor="miejsce" className="col-sm-4 col-form-label">
                    Miejsce wykonywania audytu
                  </label>
                  <div className="col-sm-8">
                    <input
                      type="text"
                      className="form-control"
                      id="miejsce"
                      value={section1.testLocalization}
                      onChange={(e) =>
                        setSection1((prev) => ({
                          ...prev,
                          testLocalization: e.target.value,
                        }))
                      }
                    />
                  </div>
                </div>
                <div className="row mb-3 my-2">
                  <label
                    htmlFor="audytorzy"
                    className="col-sm-4 col-form-label"
                  >
                    Audytorzy wykonujący prace
                  </label>
                  <div className="col-sm-8">
                    <input
                      type="text"
                      className="form-control"
                      id="audytorzy"
                    />
                  </div>
                </div>
                <div className="row mb-3 my-2">
                  <label htmlFor="wersja" className="col-sm-4 col-form-label">
                    Wersja raportu
                  </label>
                  <div className="col-sm-8">
                    <input
                      type="text"
                      className="form-control"
                      id="wersja"
                      value={section1.reportVersion}
                      onChange={(e) =>
                        setSection1((prev) => ({
                          ...prev,
                          reportVersion: e.target.value,
                        }))
                      }
                    />
                  </div>
                </div>
                <div className="row mb-3 my-2">
                  <div className="col-sm-4"></div>

                  <div className="col-sm-4 form-floating float-center">
                    <p className="text-light text-center">
                      Data wykonania audytów
                    </p>
                    <DateRange
                      onChange={(item) => setDateAudyt([item.audytDateRange])}
                      editableDateInputs={true}
                      moveRangeOnFirstSelection={false}
                      ranges={dateAudyt}
                      className="rounded-3"
                    />
                  </div>
                  <div className="col-sm-4 form-floating float-center">
                    <p className="text-light text-center">
                      Data wykonania retestów
                    </p>
                    <DateRange
                      onChange={(item) => setDateRetest([item.retestDateRange])}
                      editableDateInputs={true}
                      moveRangeOnFirstSelection={false}
                      ranges={dateRetest}
                      className="rounded-3"
                    />
                  </div>
                </div>
              </form>
            </div>
          </div>
        </div>
        <div className="accordion-item">
          <h2 className="accordion-header" id="flush-headingTwo">
            <button
              className="accordion-button collapsed"
              type="button"
              data-bs-toggle="collapse"
              data-bs-target="#flush-collapseTwo"
              aria-expanded="false"
              aria-controls="flush-collapseTwo"
            >
              2. Podsumowanie testów
            </button>
          </h2>
          <div
            id="flush-collapseTwo"
            className="accordion-collapse collapse"
            aria-labelledby="flush-headingTwo"
            data-bs-parent="#accordionFlushExample"
          >
            <div className="accordion-body">
              <div className="accordion-body">
                <form className="row g-3 mt-3">
                  <div className="row mb-3 my-2">
                    <label
                      htmlFor="inputEmail3"
                      className="col-sm-4 col-form-label"
                    >
                      Opis założeń i specyfikacja testu
                    </label>
                    <div className="col-sm-8">
                      <textarea
                        type="text"
                        className="form-control"
                        id="inputEmail3"
                        value={section1.testsSpecification}
                        onChange={(e) =>
                          setSection1((prev) => ({
                            ...prev,
                            testsSpecification: e.target.value,
                          }))
                        }
                      />
                    </div>
                  </div>
                  <div className="row mb-3 my-2">
                    <label
                      htmlFor="wnioski"
                      className="col-sm-4 col-form-label"
                    >
                      Wnioski płynace z testów
                    </label>
                    <div className="col-sm-8">
                      <textarea
                        type="text"
                        className="form-control"
                        id="wnioski"
                        value={section1.testsConclusions}
                        onChange={(e) =>
                          setSection1((prev) => ({
                            ...prev,
                            testsConclusions: e.target.value,
                          }))
                        }
                      />
                    </div>
                  </div>
                  <div className="row mb-3 my-2">
                    <label
                      htmlFor="podatności"
                      className="col-sm-4 col-form-label"
                    >
                      Wskazane podatności
                    </label>
                    <div className="col-sm-8">
                      <textarea
                        type="text"
                        className="form-control"
                        id="podatności"
                        value={section1.testsVulnerabilities}
                        onChange={(e) =>
                          setSection1((prev) => ({
                            ...prev,
                            testsVulnerabilities: e.target.value,
                          }))
                        }
                      />
                    </div>
                  </div>
                  <div className="row mb-3 my-2">
                    <label
                      htmlFor="podsumowanie"
                      className="col-sm-4 col-form-label"
                    >
                      Podsumowanie techniczne
                    </label>
                    <div className="col-sm-8">
                      <textarea
                        type="text"
                        className="form-control"
                        id="podsumowanie"
                        value={section1.technicalSummary}
                        onChange={(e) =>
                          setSection1((prev) => ({
                            ...prev,
                            technicalSummary: e.target.value,
                          }))
                        }
                      />
                    </div>
                  </div>
                  <div className="row mb-3 my-2">
                    <label
                      htmlFor="inputPassword3"
                      className="col-sm-4 col-form-label"
                    >
                      Zalecenia dalszych zmian
                    </label>
                    <div className="col-sm-8">
                      <textarea
                        type="text"
                        className="form-control"
                        id="inputPassword3"
                        value={section1.recommendedChanges}
                        onChange={(e) =>
                          setSection1((prev) => ({
                            ...prev,
                            recommendedChanges: e.target.value,
                          }))
                        }
                      />
                    </div>
                  </div>
                </form>
              </div>
            </div>
          </div>
        </div>
        <div className="accordion-item">
          <h2 className="accordion-header" id="flush-headingThree">
            <button
              className="accordion-button collapsed"
              type="button"
              data-bs-toggle="collapse"
              data-bs-target="#flush-collapseThree"
              aria-expanded="false"
              aria-controls="flush-collapseThree"
            >
              3. Wykryte podatności
            </button>
          </h2>
          <div
            id="flush-collapseThree"
            className="accordion-collapse collapse"
            aria-labelledby="flush-headingThree"
            data-bs-parent="#accordionFlushExample"
          >
            <AddVulnerabilityBar submit={addVulnerability} />
            <VulnerabilityTable data={vulnerabilities} />
          </div>
        </div>

        <div className="accordion-item" id="accordionFlushX">
          <h2 className="accordion-header" id="flush-headingFour">
            <button
              className="accordion-button collapsed"
              type="button"
              data-bs-toggle="collapse"
              data-bs-target="#flush-collapseFour"
              aria-expanded="false"
              aria-controls="flush-collapseFour"
            >
              4. Szczegóły wykrytych podatności
            </button>
          </h2>
          <div
            id="flush-collapseFour"
            className="accordion-collapse collapse"
            aria-labelledby="flush-headingFour"
            data-bs-parent="#accordionFlushExample"
          >
            <div className="accordion-body">
              {vulnerabilities &&
                vulnerabilities.map((item, index) => {
                  return (
                    <DetailsForm
                      id={index}
                      item={item}
                      key={index}
                      onSubmit={addDetailsVuln}
                    />
                  );
                })}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Sidebar;
